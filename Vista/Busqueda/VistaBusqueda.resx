<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtBuscar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAnQAAAAgCAYAAACb6eUHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANNSURBVHhe7d2xb1tVFAdgjx07ZmRkZOzI2AmxIDEyIv6C
        jgwMSGwMDGzM/ANMxH7v2U6sKE0UKURIdmRFkVGT6BGiYFwrMveYi1BpWlIIzTN8n3QG69nP60/n3ntu
        CwCA/5n19fUHqT7udrv9VI/Lsjxpt9sLpZRSSin16hVZKjJVVGSsVA9z7Lpd6cX30598WRTF+WAwqA8P
        DxdnZ2eLuq4X0+l0AQDA3xNZKjJVVGSs7e3tutPpzKuq+jplsDdyHPtnUmr8NL2wHo/H89lslv8aAIB/
        y9XV1WIymSx6vV4dTbUU7O7laPZqclduczgcTufzeX49AACvSwS7aKqlTPZ9ymZrOabdTLT3+v3+d6en
        p1pyAAB37OLiIrp1k5TR3spx7eWiMxdhLn4IAEAzxNa3lNGeROMtx7YXi2VWnTkAgOa5vLyMTt0oGnA5
        uj0vhbnPR6ORY6sAAA01mUyeplD3TY5vz0pJb62qqvPYfAcAQHNtbGz8eO1+ujgSG6co8vcAAGiok5OT
        Rcpu3+YY95uU8O4VRfGT8SQAAKuhLMvLWGHNcW4Z6B7GVOL8HACAhjs4OIhA92GOc8vbIL44OjrKjwEA
        aLrnll3Th37czQoAwGqIESZlWR7nOLfs0D0xSBgAYHXE2YdOp/NzjnOtVnyIlAcAwGqIUXMpw81znFsu
        uT6ua2ciAABWxXQ6jSXXkxznWq2qqr46Pj7OjwEAaLo4/xDnIHKcW44t+WB/f98mOgCAFTEajeadTueT
        HOeWge5+URS/5OcAADTctdd/xRyTmGcCAECzxXSSqqpGOcb9IRJeJL38PQAAGmp3dze6c+/mGPcsXToA
        gGZ7YXfudynprfX7/XEcgwUAoFlimPDm5uYPKbO9mePb9fLS62kMqwMAoDl2dnbOyrJ8L8e2l6uq6p0I
        dbPZLP8cAIC7Ep25CHPdbvejHNduJjp1vV5v4gYJAIC7E3vmYpn1xp25P4s9dXEt2NbWVu3yfgCA1yfO
        NOzt7Z3HAYi/3DN3E+klb8fLer3e+XA4nEfXzh47AIDbFRlrPB4vBoNBHfe0pgz2fo5jtyfSYapH0bWL
        2/3b7fZCKaWUUkrdTkXGKoris5S3HuT4BQDAf1+r9SsLeLcN2RwqMgAAAABJRU5ErkJggg==
</value>
  </data>
</root>